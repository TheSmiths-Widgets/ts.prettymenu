Ext.data.JsonP.prettymenu({"tagname":"class","name":"prettymenu","autodetected":{},"files":[{"filename":"widget.js","href":null}],"requires":["FontAwesome"],"members":[{"name":"DEFAULT_HANDLER","tagname":"property","owner":"prettymenu","id":"property-DEFAULT_HANDLER","meta":{"readonly":true}},{"name":"DEFAULT_ICON","tagname":"property","owner":"prettymenu","id":"property-DEFAULT_ICON","meta":{"readonly":true}},{"name":"DEFAULT_ID","tagname":"property","owner":"prettymenu","id":"property-DEFAULT_ID","meta":{"readonly":true}},{"name":"icons","tagname":"property","owner":"prettymenu","id":"property-icons","meta":{"readonly":true}},{"name":"init","tagname":"method","owner":"prettymenu","id":"method-init","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-prettymenu","short_doc":"This widget display pretty menus as a set of clickable cards. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Requires</h4><div class='dependency'>FontAwesome</div></pre><div class='doc-contents'><p>This widget display pretty menus as a set of clickable cards. Each card contain a\n<a href=\"http://fontawesome.io/icons\">FontAwesome</a> icon and a title. Many parameters are customisable to\nmake the menu look the way you want.</p>\n\n<p>The font currently in use has been placed in the <code>assets/fonts</code> folder and should be merged with\nthe current <code>assets</code> folder of your app.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-DEFAULT_HANDLER' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='prettymenu'>prettymenu</span><br/></div><a href='#!/api/prettymenu-property-DEFAULT_HANDLER' class='name expandable'>DEFAULT_HANDLER</a> : Function<span class=\"signature\"><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>The default handler used if no one is provided ...</div><div class='long'><p>The default handler used if no one is provided</p>\n<p>Defaults to: <code>function(){ Ti.API.warn(&#39;Menu uninitialized&#39;); }</code></p></div></div></div><div id='property-DEFAULT_ICON' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='prettymenu'>prettymenu</span><br/></div><a href='#!/api/prettymenu-property-DEFAULT_ICON' class='name expandable'>DEFAULT_ICON</a> : String<span class=\"signature\"><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>The default icon used if no one is provided ...</div><div class='long'><p>The default icon used if no one is provided</p>\n<p>Defaults to: <code>&quot;fa-remove&quot;</code></p></div></div></div><div id='property-DEFAULT_ID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='prettymenu'>prettymenu</span><br/></div><a href='#!/api/prettymenu-property-DEFAULT_ID' class='name expandable'>DEFAULT_ID</a> : String<span class=\"signature\"><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>The default id used if no one is provided ...</div><div class='long'><p>The default id used if no one is provided</p>\n<p>Defaults to: <code>&quot;default&quot;</code></p></div></div></div><div id='property-icons' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='prettymenu'>prettymenu</span><br/></div><a href='#!/api/prettymenu-property-icons' class='name expandable'>icons</a> : Object<span class=\"signature\"><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'><p>The list of correspondances between icons names and their ascii code.</p>\n</div><div class='long'><p>The list of correspondances between icons names and their ascii code.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-init' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='prettymenu'>prettymenu</span><br/></div><a href='#!/api/prettymenu-method-init' class='name expandable'>init</a>( <span class='pre'>menus, config</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Populate the widget with some menu-items. ...</div><div class='long'><p>Populate the widget with some menu-items. A configuration can be pass and will be applied to every\nmenu item provided.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>menus</span> : Object[]<div class='sub-desc'><p>A list of menu item; Each item should have the following form:</p>\n<ul><li><span class='pre'>id</span> : String (optional)<div class='sub-desc'><p>An id that will be communicated to the click handler</p>\n</div></li><li><span class='pre'>title</span> : String (optional)<div class='sub-desc'><p>The title to be displayed.</p>\n</div></li><li><span class='pre'>icon</span> : String (optional)<div class='sub-desc'><p>The icon to display; Use identifier from\n<a href=\"http://fontawesome.io/icons\">FontAwesome</a></p>\n</div></li><li><span class='pre'>onClick</span> : Function (optional)<div class='sub-desc'><p>A click handler</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>The corresponding menu item id.</p>\n</div></li></ul></div></li></ul></div></li><li><span class='pre'>config</span> : String<div class='sub-desc'><p>Well... the configuration of the widget. Have fun.</p>\n<ul><li><span class='pre'>backgroundColor</span> : String<div class='sub-desc'><p>The color of everything that is not mentionned as a\nforeground element.</p>\n</div></li><li><span class='pre'>border</span> : String<div class='sub-desc'><p>The item's border.</p>\n<ul><li><span class='pre'>color</span> : String<div class='sub-desc'><p>The border's color.</p>\n</div></li><li><span class='pre'>radius</span> : String<div class='sub-desc'><p>The border's radius.</p>\n</div></li><li><span class='pre'>width</span> : String<div class='sub-desc'><p>The border's width.</p>\n</div></li></ul></div></li><li><span class='pre'>font</span> : String<div class='sub-desc'><p>The title's font</p>\n<ul><li><span class='pre'>fontFamily</span> : String<div class='sub-desc'><p>The font's family</p>\n</div></li><li><span class='pre'>fontSize</span> : String<div class='sub-desc'><p>The font's size.</p>\n</div></li></ul></div></li><li><span class='pre'>foregroundColor</span> : String<div class='sub-desc'><p>The titles's and icon's color; Also, if no border's color\nhas been supplied, the border's color.</p>\n</div></li><li><span class='pre'>iconSize</span> : String<div class='sub-desc'><p>The icon's size</p>\n</div></li><li><span class='pre'>innerPadding</span> : String<div class='sub-desc'><p>The space between the icon and the title.</p>\n</div></li><li><span class='pre'>horizontalMargin</span> : String<div class='sub-desc'><p>The space between two items.</p>\n</div></li><li><span class='pre'>noBorder</span> : String<div class='sub-desc'><p>If true, no border will be displayed.</p>\n</div></li><li><span class='pre'>outerPadding</span> : String<div class='sub-desc'><p>The space from top and bottom borders.</p>\n</div></li><li><span class='pre'>perRow</span> : String<div class='sub-desc'><p>The number of item to put in one row.</p>\n</div></li><li><span class='pre'>verticalMargin</span> : String<div class='sub-desc'><p>The space between two rows of item.</p>\n</div></li><li><span class='pre'>width</span> : String<div class='sub-desc'><p>The width of the item. Also, if no font.fontSize has been supplied,\nwill set the title's fontSize to one tenth of the width. If no iconSize has been supplied, will\nset the icon's size to one third of the width.</p>\n</div></li></ul></div></li></ul></div></div></div></div></div></div></div>","meta":{}});